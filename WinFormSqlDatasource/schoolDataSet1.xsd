<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="schoolDataSet1" targetNamespace="http://tempuri.org/schoolDataSet1.xsd" xmlns:mstns="http://tempuri.org/schoolDataSet1.xsd" xmlns="http://tempuri.org/schoolDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="schoolConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="schoolConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.WinFormSqlDatasource.Properties.Settings.GlobalReference.Default.schoolConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CourseTableAdapter" GeneratorDataComponentClassName="CourseTableAdapter" Name="Course" UserDataComponentName="CourseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="schoolConnectionString (Settings)" DbObjectName="school.dbo.Course" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Course] WHERE (([Cno] = @Original_Cno) AND ((@IsNull_Cname = 1 AND [Cname] IS NULL) OR ([Cname] = @Original_Cname)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Cno" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cno" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Cname" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cname" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Cname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Cname" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Course] ([Cno], [Cname]) VALUES (@Cno, @Cname);
SELECT Cno, Cname FROM Course WHERE (Cno = @Cno)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Cno" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cno" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Cname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Cname" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Cno, Cname FROM dbo.Course</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Course] SET [Cno] = @Cno, [Cname] = @Cname WHERE (([Cno] = @Original_Cno) AND ((@IsNull_Cname = 1 AND [Cname] IS NULL) OR ([Cname] = @Original_Cname)));
SELECT Cno, Cname FROM Course WHERE (Cno = @Cno)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Cno" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cno" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Cname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Cname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Cno" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cno" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Cname" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cname" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Cname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Cname" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Cno" DataSetColumn="Cno" />
              <Mapping SourceColumn="Cname" DataSetColumn="Cname" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SCTableAdapter" GeneratorDataComponentClassName="SCTableAdapter" Name="SC" UserDataComponentName="SCTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="schoolConnectionString (Settings)" DbObjectName="school.dbo.SC" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SC] ([Sno], [Cno]) VALUES (@Sno, @Cno)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Sno" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sno" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Cno" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cno" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Sno, Cno FROM dbo.SC</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Sno" DataSetColumn="Sno" />
              <Mapping SourceColumn="Cno" DataSetColumn="Cno" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentTableAdapter" GeneratorDataComponentClassName="StudentTableAdapter" Name="Student" UserDataComponentName="StudentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="schoolConnectionString (Settings)" DbObjectName="school.dbo.Student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Student] WHERE (([Sno] = @Original_Sno) AND ((@IsNull_Sname = 1 AND [Sname] IS NULL) OR ([Sname] = @Original_Sname)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Sno" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sno" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Sname" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sname" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Sname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Sname" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Student] ([Sno], [Sname]) VALUES (@Sno, @Sname);
SELECT Sno, Sname FROM Student WHERE (Sno = @Sno)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Sno" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sno" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Sname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Sname" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Sno, Sname FROM dbo.Student</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Student] SET [Sno] = @Sno, [Sname] = @Sname WHERE (([Sno] = @Original_Sno) AND ((@IsNull_Sname = 1 AND [Sname] IS NULL) OR ([Sname] = @Original_Sname)));
SELECT Sno, Sname FROM Student WHERE (Sno = @Sno)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Sno" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sno" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Sname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Sname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Sno" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sno" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Sname" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sname" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Sname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Sname" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Sno" DataSetColumn="Sno" />
              <Mapping SourceColumn="Sname" DataSetColumn="Sname" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="schoolDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="schoolDataSet1" msprop:Generator_UserDSName="schoolDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Course" msprop:Generator_TableClassName="CourseDataTable" msprop:Generator_TableVarName="tableCourse" msprop:Generator_TablePropName="Course" msprop:Generator_RowDeletingName="CourseRowDeleting" msprop:Generator_RowChangingName="CourseRowChanging" msprop:Generator_RowEvHandlerName="CourseRowChangeEventHandler" msprop:Generator_RowDeletedName="CourseRowDeleted" msprop:Generator_UserTableName="Course" msprop:Generator_RowChangedName="CourseRowChanged" msprop:Generator_RowEvArgName="CourseRowChangeEvent" msprop:Generator_RowClassName="CourseRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Cno" msprop:Generator_ColumnVarNameInTable="columnCno" msprop:Generator_ColumnPropNameInRow="Cno" msprop:Generator_ColumnPropNameInTable="CnoColumn" msprop:Generator_UserColumnName="Cno" type="xs:int" />
              <xs:element name="Cname" msprop:Generator_ColumnVarNameInTable="columnCname" msprop:Generator_ColumnPropNameInRow="Cname" msprop:Generator_ColumnPropNameInTable="CnameColumn" msprop:Generator_UserColumnName="Cname" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SC" msprop:Generator_TableClassName="SCDataTable" msprop:Generator_TableVarName="tableSC" msprop:Generator_TablePropName="SC" msprop:Generator_RowDeletingName="SCRowDeleting" msprop:Generator_RowChangingName="SCRowChanging" msprop:Generator_RowEvHandlerName="SCRowChangeEventHandler" msprop:Generator_RowDeletedName="SCRowDeleted" msprop:Generator_UserTableName="SC" msprop:Generator_RowChangedName="SCRowChanged" msprop:Generator_RowEvArgName="SCRowChangeEvent" msprop:Generator_RowClassName="SCRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Sno" msprop:Generator_ColumnVarNameInTable="columnSno" msprop:Generator_ColumnPropNameInRow="Sno" msprop:Generator_ColumnPropNameInTable="SnoColumn" msprop:Generator_UserColumnName="Sno" type="xs:int" />
              <xs:element name="Cno" msprop:Generator_ColumnVarNameInTable="columnCno" msprop:Generator_ColumnPropNameInRow="Cno" msprop:Generator_ColumnPropNameInTable="CnoColumn" msprop:Generator_UserColumnName="Cno" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Student" msprop:Generator_TableClassName="StudentDataTable" msprop:Generator_TableVarName="tableStudent" msprop:Generator_TablePropName="Student" msprop:Generator_RowDeletingName="StudentRowDeleting" msprop:Generator_RowChangingName="StudentRowChanging" msprop:Generator_RowEvHandlerName="StudentRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentRowDeleted" msprop:Generator_UserTableName="Student" msprop:Generator_RowChangedName="StudentRowChanged" msprop:Generator_RowEvArgName="StudentRowChangeEvent" msprop:Generator_RowClassName="StudentRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Sno" msprop:Generator_ColumnVarNameInTable="columnSno" msprop:Generator_ColumnPropNameInRow="Sno" msprop:Generator_ColumnPropNameInTable="SnoColumn" msprop:Generator_UserColumnName="Sno" type="xs:int" />
              <xs:element name="Sname" msprop:Generator_ColumnVarNameInTable="columnSname" msprop:Generator_ColumnPropNameInRow="Sname" msprop:Generator_ColumnPropNameInTable="SnameColumn" msprop:Generator_UserColumnName="Sname" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Course" />
      <xs:field xpath="mstns:Cno" />
    </xs:unique>
    <xs:unique name="Student_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Student" />
      <xs:field xpath="mstns:Sno" />
    </xs:unique>
  </xs:element>
</xs:schema>